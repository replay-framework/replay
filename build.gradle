plugins {
  // To enforce Google's Java CodyStyle from the `googleJavaFormat` Gradle task
  alias(libs.plugins.googleJavaFormat)
}

repositories {
  mavenCentral()
}

defaultTasks 'clean', 'check', 'publishToMavenLocal'

subprojects {

  group = 'io.github.replay-framework'
  version = project.properties['revision'] ?: '2.7.0'

  apply plugin: 'java'
  apply plugin: 'java-library'

  [compileJava, compileTestJava]*.options.collect { options ->
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
  }
  java.toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }

  repositories {
    mavenCentral()
    mavenLocal()
  }

  sourceSets {
    main {
      java {
        srcDir 'src'
        include '**/*.java'
        include '**/*.kt'
      }
      resources {
        srcDir 'src'
        exclude '**/*.java'
        exclude '**/*.kt'
      }
    }
    test {
      java {
        srcDir 'test'
        include '**/*.java'
        include '**/*.kt'
      }
      resources {
        srcDir 'test'
        exclude '**/*.java'
        exclude '**/*.kt'
      }
    }
  }


  test {
    include 'play/**/*'
  }

  tasks.withType(Test).configureEach { testTask ->
    useJUnitPlatform()
    testTask.systemProperties['file.encoding'] = 'UTF-8'
    testTask.systemProperties['user.country'] = 'TR'
    testTask.systemProperties['user.language'] = 'tr'
    testTask.testLogging { exceptionFormat = 'full' }
    testTask.outputs.upToDateWhen { false }
  }

  dependencies {
    testImplementation(libs.junitApi)
    testImplementation(libs.junitParams)
    testRuntimeOnly(libs.junitEngine)
    testRuntimeOnly(libs.junitPlatformLauncher)
    testImplementation(libs.mockitoCore)
    testImplementation(libs.assertjCore)
  }
}

googleJavaFormat {
  toolVersion = '1.8'
  exclude '.gradle/**/*.java'
}

// Needed to allow the googleJavaFormat Gradle plugin to select the right variant of Guava
configurations.configureEach {
  attributes {
    attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
  }
}
