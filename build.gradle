defaultTasks 'clean', 'check', 'publishToMavenLocal'

ext {
  commonsLangVersion = '3.12.0'
  netty4Version = '4.1.93.Final'
  commonsTextVersion = '1.10.0'
  slf4jVersion = '2.0.7'
  assertjVersion = '3.24.2'
  mockitoVersion = '5.3.1'
  pdfTestVersion = '1.8.1'
  groovyVersion = '3.0.17'
  httpclientVersion = '4.5.14'
  restAssuredVersion = '5.3.0'
  junitVersion = '5.9.3'
}

subprojects {

  group='com.codeborne.replay'
  version=project.properties['revision'] ?: '2.2.0-SNAPSHOT'

  apply plugin: 'java'
  apply plugin: 'java-library'

  [compileJava, compileTestJava]*.options.collect {options ->
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
  }
  sourceCompatibility = 11
  targetCompatibility = 11

  repositories {
    mavenCentral()
    mavenLocal()
  }

  sourceSets {
    main {
      java {
        srcDir 'src'
        include '**/*.java'
        include '**/*.kt'
      }
      resources {
        srcDir 'src'
        exclude '**/*.java'
        exclude '**/*.kt'
      }
    }
    test {
      java {
        srcDir 'test'
        include '**/*.java'
        include '**/*.kt'
      }
      resources {
        srcDir 'test'
        exclude '**/*.java'
        exclude '**/*.kt'
      }
    }
  }


  test {
    include 'play/**/*'
  }

  tasks.withType(Test).configureEach { testTask ->
    useJUnitPlatform()
    testTask.systemProperties['file.encoding'] = 'UTF-8'
    testTask.systemProperties['user.country'] = 'TR'
    testTask.systemProperties['user.language'] = 'tr'
    testTask.testLogging {exceptionFormat = 'full'}
    testTask.outputs.upToDateWhen { false }
  }
  
  dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.assertj:assertj-core:$assertjVersion")
  }
}
