sourceSets {
  main {
    java { srcDir "app" }
    resources { srcDir "app" }
    resources {
      srcDir 'conf'
      include '**/*'
    }
  }
  test {
    java { srcDir "test" }
  }
}

configurations {
  netty3TestClasspath.extendsFrom testRuntimeOnly
  netty4TestClasspath.extendsFrom testRuntimeOnly
  javanetTestClasspath.extendsFrom testRuntimeOnly
}

dependencies {
  // To run the app locally:
  // implementation project(':netty3')

  // RePlay dependencies:
  implementation project(':framework')
  implementation project(':fastergt')

  // To run tests against different backends:
  netty3TestClasspath project(':netty3')
  netty4TestClasspath project(':netty4')
  javanetTestClasspath project(':javanet')

  // Test dependencies:
  testImplementation(libs.selenide) {
    exclude group: 'io.netty'
    exclude group: 'io.opentelemetry'
    exclude group: 'org.asynchttpclient'
  }
}

test {
  include '**/*'
  exclude 'ui/**'
}

tasks.register('uitest') {
  dependsOn tasks.withType(Test)
}

tasks.register('uitest-netty3', Test) {
  include 'ui/**/*'
  outputs.upToDateWhen { false }
  classpath = configurations.netty3TestClasspath + classpath
}

tasks.register('uitest-netty4', Test) {
  include 'ui/**/*'
  exclude 'ui/hello/RenderStaticFilesSpec*'
  exclude 'ui/hello/LinksInHtmlSpec*'
  exclude 'ui/hello/TagsInvolvesStaticFilesSpec*'
  // TODO: clarify why `replay-netty4` fails on static files
  //       see https://github.com/replay-framework/replay/issues/157
  outputs.upToDateWhen { false }
  classpath = configurations.netty4TestClasspath + classpath
}

tasks.register('uitest-javanet', Test) {
  include 'ui/**/*'
  outputs.upToDateWhen { false }
  classpath = configurations.javanetTestClasspath + classpath
}

tasks.withType(Test).configureEach {
  System.properties.stringPropertyNames()
      .findAll { it.startsWith("selenide.") }
      .forEach {
        println " set ${it} to ${System.getProperty(it)}"
        systemProperties[it] = System.getProperty(it)
      }
}
